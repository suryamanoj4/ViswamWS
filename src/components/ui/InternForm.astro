---
import type { InternForm as Props} from '~/types';
import Button from '~/components/ui/Button.astro';

const { inputs, dropdown, resume, button = 'Submit', description=''}= Astro.props;
---

<form id="intern-form">
    {
        inputs &&
            inputs.map(
                ({ type= 'text', name, label='', autocomplete= 'on', placeholder='' }) =>
                    name &&(
                        <div class="mb-6">
                            {label&& (
                                <label for={name} class="block text-sm font-medium">
                                    {label}<span class="required">*</span>
                                </label>
                            )}
                            <input
                                type={type}
                                name={name}
                                id={name}
                                autocomplete={autocomplete}
                                placeholder={placeholder}
                                class="py-3 px-4 block w-full text-md rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
                                required
                            />
                        </div>
                    )
            )
    }

{
  dropdown &&
    dropdown.map(drop => (
      <div class="mb-6">
        <label for={drop.name} class="block text-sm font-medium">
          {drop.label}<span class="required">*</span>
        </label>
        <select 
          id={drop.name} 
          name={drop.name} 
          class="dropdown-select py-3 px-4 block w-full text-md rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
        >
          {drop.options.map(option => (
            <option value={option.value}>{option.text}</option>
          ))}
        </select>
        <div class="text-field mt-3" style="display: none;">
          <label for={`${drop.name}-details`} class="block text-sm font-medium">Additional Details</label>
          <textarea
            id={`${drop.name}-details`}
            name={`${drop.name}-details`}
            class="py-3 px-4 block w-full text-md rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
            rows="4"
            placeholder="Please provide more details..."
          ></textarea>
        </div>
      </div>
    ))
}

    {
        resume && (
            <div class="mt-3 flex flex-col items-start">
                    <label for={resume.name} class="block text-sm font-medium">
                        {resume.label}<span class="required">*</span>
                    </label>
                    <input
                        type={resume.type}
                        name={resume.name}
                        id={resume.name}
                        accept={resume.accept}
                        class="mt-2 p-2 border rounded-lg"
                        required
                    />
            </div>
        )

    }

    {
        button && (
            <div class="mt-10 grid">
                <Button variant="primary" type="submit">
                    {button}
                </Button>
            </div>
        )
    }

    {
        description && (
            <div class="mt-3 text-center">
                <p class="text-sm text-gray-600 dark:text-gray-400">{description}</p>
            </div>
        )
    }
</form>

<script>

document.addEventListener('DOMContentLoaded', function() {
  const dropdowns = document.querySelectorAll('.dropdown-select');
  dropdowns.forEach(dropdown => {
    dropdown.addEventListener('change', function() {
      const textField = this.nextElementSibling;
      
      if (this.value === 'Yes') {
        textField.style.display = 'block';
      } else {
        textField.style.display = 'none';
      }
    });
    
    if (dropdown.value === 'Yes') {
      dropdown.nextElementSibling.style.display = 'block';
    }
  });
});

document.getElementById('contact-form')?.addEventListener('submit', async (e) => {
  e.preventDefault();
  
  const form = e.target as HTMLFormElement;
  const formData = new FormData(form);
  const data = Object.fromEntries(formData.entries());

  try {
    const response = await fetch('', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(data)
    });

    if (response.ok) {
      alert('Thank you for your message! We will get back to you soon.');
      form.reset();
    } else {
      throw new Error('Submission failed');
    }
  } catch (error) {
    console.error('Error submitting form:', error);
    alert('There was an error submitting your message. Please try again later.');
  }
});
</script>

<style>
.required{
    color: red;
}
</style>
